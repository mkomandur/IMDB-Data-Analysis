plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Hello"),
title = "3D Scatter plot: IMDB Score vs Revenue vs Budget")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability"),
yaxis = list(title="Average IMDB Score"),
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",zeroline = TRUE),
yaxis = list(title="Average IMDB Score"),
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability"),
yaxis = list(title="Average IMDB Score"),
zeroline = TRUE,
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability"),
yaxis = list(title="Average IMDB Score"),
title = "Interactive Scatter plot: IMDB Score vs Profitability") %>%
list(zeroline = TRUE)
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,
showline = TRUE,
showticklabels = FALSE,
showgrid = FALSE),
yaxis = list(title="Average IMDB Score"),
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,
showline = TRUE,
showticklabels = FALSE,
showgrid = TRUE),
yaxis = list(title="Average IMDB Score"),
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
yaxis = list(title="Average IMDB Score",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
yaxis = list(title="Average IMDB Score",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
title = "Interactive Scatter plot: IMDB Score vs Profitability")  %>%
add_annotations(text="Hello")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
yaxis = list(title="Average IMDB Score",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
title = "Interactive Scatter plot: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
yaxis = list(title="Average IMDB Score",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
title = "Interactive Scatter: IMDB Score vs Profitability")
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
yaxis = list(title="Average IMDB Score",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
title = "Interactive Scatter: IMDB Score vs Profitability",
showlegend = FALSE)
imdb_country <- movie %>%
group_by(country) %>%
summarise(num_movie = n(),
avg_score = mean(imdb_score,na.rm=TRUE),
profit = (sum(gross,na.rm=TRUE)-sum(budget,na.rm=TRUE))/1000000) %>%
subset(country != "") %>%
subset(num_movie > 5) %>%
arrange(-num_movie)
imdb_country$profit_flag <- as.factor(ifelse(imdb_country$profit > 0 , 1,0))
imdb_country$profit_2 <- imdb_country$profit + 2009
plot_ly(imdb_country, x = ~profit_2, y = ~avg_score,
color = ~profit_flag, colors = c('red', 'green'),
size = ~num_movie,text=~country) %>%
add_markers() %>%
layout(xaxis = list(type = "log",title="Profitability",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
yaxis = list(title="Average IMDB Score",
zeroline = TRUE,showline = TRUE,showticklabels = FALSE,showgrid = TRUE),
title = "Interactive Scatter: IMDB Score vs Profitability",
showlegend = FALSE)
View(imdb_country)
country_language <- movie %>%
group_by(country) %>%
mutate(num = n_distinct(language))
View(country_language)
country_language <- movie %>%
group_by(country) %>%
mutate(num = count(language))
country_language <- movie %>%
group_by(country) %>%
mutate(num = n_unique(language))
country_language <- movie %>%
group_by(country) %>%
summarise(num = n_unique(language))
country_language <- movie %>%
group_by(country) %>%
summarise(num = n_distinct(language))
View(country_language)
country_language <- movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num)
View(country_language)
country_language <- movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 4)
View(country_language)
country_language <- movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3)
country_language <- movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3)
movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3) %>%
ggplot(aes(y=num,x=country))+
geom_bar()
movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3) %>%
ggplot(aes(y=num,x=country))+
geom_bar(stat = "")
movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3) %>%
ggplot(aes(y=num,x=country))+
geom_bar(stat = "identity")
movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3) %>%
ggplot(aes(y=num,x=reorder(country,-num)))+
geom_bar(stat = "identity")
movie %>%
group_by(country) %>%
summarise(num = n_distinct(language)) %>%
arrange(-num) %>%
subset(num > 3) %>%
ggplot(aes(y=num,x=reorder(country,-num)))+
geom_bar(stat = "identity")+
xlab("")+ylab("Number of Languages")+
ggtitle("Top countries by number of languages of films produced")
View(country_language)
install.packages("rmdformats")
install.packages("tibble","DT","knitr","tm")
install.packages("tibble")
install.packages("DT")
install.packages("knitr")
install.packages("tm")
install.packages("ggplot2")
install.packages("wordcloud")
install.packages("dplyr")
install.packages("fitdistrplus")
install.packages("plotly")
library(ggplot2)
library(tibble)
rm(movie)
url <- "https://github.com/yash91sharma/projectX/raw/master/movie_metadata.csv"
movie <- as_data_frame(read.csv(url, stringsAsFactors = FALSE))
movie$movie_title <- (sapply(movie$movie_title,gsub,pattern="Ã‚",replacement=""))
movie$genres_2 <- (sapply(movie$genres,gsub,pattern="\\|",replacement=" "))
movie$plot_keywords_2 <- (sapply(movie$plot_keywords,gsub,pattern="\\|",replacement=" "))
movie = movie[!duplicated(movie$movie_title),]
movie <- transform(movie, budget = ifelse(country == "South Korea", budget/1173.49, budget))
movie <- transform(movie, budget = ifelse(country == "Japan", budget/115.33, budget))
movie <- transform(movie, budget = ifelse(country == "Turkey", budget/3.49, budget))
movie <- transform(movie, budget = ifelse(country == "Hungary", budget/298.17, budget))
movie <- transform(movie, budget = ifelse(country == "Thailand", budget/35.67, budget))
movie <- transform(movie, gross = ifelse(country == "South Korea", gross/1173.49, gross))
movie <- transform(movie, gross = ifelse(country == "Japan", gross/115.33, gross))
movie <- transform(movie, gross = ifelse(country == "Turkey", gross/3.49, gross))
movie <- transform(movie, gross = ifelse(country == "Hungary", gross/298.17, gross))
movie <- transform(movie, gross = ifelse(country == "Thailand", gross/35.67, gross))
library(tm)
genre <- Corpus(VectorSource(movie$genres_2))
inspect(genre)
genre_dtm <- DocumentTermMatrix(genre)
genre_tdm <- TermDocumentMatrix(genre)
genre_freq <- colSums(as.matrix(genre_dtm))
freq <- sort(colSums(as.matrix(genre_dtm)), decreasing=TRUE)
length(genre_freq)
genre_ord <- order(genre_freq)
genre_freq[head(genre_ord)]
head(table(genre_freq), 20)
tail(table(genre_freq), 20)
genre_wf <- data.frame(word=names(genre_freq), freq=genre_freq)
library(ggplot2)
library(dplyr)
ggplot(genre_wf, aes(x=reorder(word,-freq), y=freq))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))
install.packages("wordcloud")
library(wordcloud)
set.seed(10)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(genre_wf$word,genre_wf$freq,random.order=FALSE,
rot.per=.15, colors=pal2,scale=c(4,.9))
word_assoc <- function(word)
{
assoc_1 <- as.data.frame(findAssocs(genre_dtm,c(word),corlimit = 0.1))
assoc_1$words <- rownames(assoc_1)
colnames(assoc_1)[1] <- c("score")
assoc_1$key <- c(word)
rownames(assoc_1) <- NULL
return(assoc_1)
}
drama_assoc <- word_assoc("drama")
comedy_assoc <- word_assoc("comedy")
thriller_assoc <- word_assoc("thriller")
action_assoc <- word_assoc("action")
romance_assoc <- word_assoc("romance")
adventure_assoc <- word_assoc("adventure")
crime_assoc <- word_assoc("crime")
assoc <- rbind(drama_assoc,comedy_assoc,thriller_assoc,action_assoc,
romance_assoc,adventure_assoc,crime_assoc)
str(assoc)
ggplot(assoc,aes(x=words,y=score))+
geom_bar(stat="identity")+
facet_grid(~key,scales = 'free',space="free_x")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Association Score")+
xlab("Genre")+
ggtitle("Genre Associations")
ggplot(assoc,aes(x=reorder(words,-score),y=score))+
geom_bar(stat="identity")+
facet_grid(~key,scales = 'free',space="free_x")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Association Score")+
xlab("Genre")+
ggtitle("Genre Associations")
ggplot(assoc,aes(x=reorder(words,score),y=score))+
geom_bar(stat="identity")+
facet_grid(~key,scales = 'free',space="free_x")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Association Score")+
xlab("Genre")+
ggtitle("Genre Associations")
df <- data.frame(name=c('foo','bar','foo','bar'),
period=c('old','old','recent','recent'),
val=c(1.23,2.17,4.15,3.65),
stringsAsFactors=F)
View(df)
df$n = as.numeric(factor(df$period))
View(df)
df = ddply(df,.(period,name),transform, x=paste(c(rep(' ',n-1), name), collapse=''))
df$x = factor(df$x, levels=df[order(df$val), 'x'])
View(df)
df$x = factor(df$x, levels=df[order(df$val), 'x'])
df = ddply(df,.(period,name),transform, x=paste(c(rep(' ',n-1), name), collapse=''))
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
View(df)
library(plyr)
df = ddply(df,.(period,name),transform, x=paste(c(rep(' ',n-1), name), collapse=''))
View(df)
df$x = factor(df$x, levels=df[order(df$val), 'x'])
p = ggplot(data = df, aes(x = x, y = val))
p = p + geom_bar(stat='identity')
p = p + facet_grid(~period, scale='free_x')
p = ggplot2(data = df, aes(x = x, y = val))
library(ggplot2)
p = ggplot2(data = df, aes(x = x, y = val))
p = ggplot(data = df, aes(x = x, y = val))
p = p + geom_bar(stat='identity')
p = p + facet_grid(~period, scale='free_x')
p
View(assoc)
assoc$n = as.numeric(factor(df$key))
assoc$n = as.numeric(factor(assoc$key))
assoc = ddply(assoc,.(key,words),transform, x=paste(c(rep(' ',key-1), words), collapse=''))
assoc = ddply(assoc,.(key,words),transform, x=paste(c(rep(' ',n-1), words), collapse=''))
View(assoc)
assoc$x = factor(assoc$x, levels=assoc[order(assoc$score), 'x'])
ggplot(assoc, aes(x = x, y = score))+
geom_bar(stat='identity')+
facet_grid(~words, scale='free_x')
ggplot(assoc,aes(x=reorder(words,-score),y=score))+
geom_bar(stat="identity")+
facet_grid(~key,scales = 'free',space="free_x")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Association Score")+
xlab("Genre")+
ggtitle("Genre Associations")
ggplot(assoc, aes(x = x, y = score))+
geom_bar(stat='identity')+
facet_grid(~words, scale='free_x')
ggplot(assoc,aes(x=words,y=score))+
geom_bar(stat="identity")+
facet_grid(~key,scales = 'free',space="free_x")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Association Score")+
xlab("Genre")+
ggtitle("Genre Associations")
ggplot(assoc,aes(x=x,y=score))+
geom_bar(stat="identity")+
facet_grid(~key,scales = 'free',space="free_x")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Association Score")+
xlab("Genre")+
ggtitle("Genre Associations")
View(assoc)
country_summary <- movie %>%
subset(country != "") %>%
group_by(country) %>%
summarise(count=n(),
avg_score=mean(imdb_score,na.rm="true"),
avg_budget = mean(budget,na.rm="true"),
avg_gross = mean(gross,na.rm="true"))
library(dplry)
country_summary <- movie %>%
subset(country != "") %>%
group_by(country) %>%
summarise(count=n(),
avg_score=mean(imdb_score,na.rm="true"),
avg_budget = mean(budget,na.rm="true"),
avg_gross = mean(gross,na.rm="true"))
library(dplyr)
country_summary <- movie %>%
subset(country != "") %>%
group_by(country) %>%
summarise(count=n(),
avg_score=mean(imdb_score,na.rm="true"),
avg_budget = mean(budget,na.rm="true"),
avg_gross = mean(gross,na.rm="true"))
country_with_multiple_movies <- subset(country_summary,count>1)[1]
ggplot(country_summary[complete.cases(country_summary), ],
aes(x=reorder(country,-avg_budget),avg_budget/1000000))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Average Movie Budget by Country")
ggplot(subset(movie,country %in% country_with_multiple_movies$country),
aes(x=country,y=budget/1000000))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Movie Budget variation by Country")+
ylim(0,100)
ggplot(country_summary[complete.cases(country_summary), ],
aes(x=reorder(country,-avg_budget),avg_budget/1000000))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Average Movie Budget by Country")
country_summary <- movie %>%
subset(country != "") %>%
subset(country != "New Line") %>%
group_by(country) %>%
summarise(count=n(),
avg_score=mean(imdb_score,na.rm="true"),
avg_budget = mean(budget,na.rm="true"),
avg_gross = mean(gross,na.rm="true"))
country_with_multiple_movies <- subset(country_summary,count>1)[1]
ggplot(country_summary[complete.cases(country_summary), ],
aes(x=reorder(country,-avg_budget),avg_budget/1000000))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Average Movie Budget by Country")
ggplot(country_summary[complete.cases(country_summary), ],
aes(x=reorder(country,-avg_budget),avg_budget/1000000))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Average Movie Budget by Country")
ggplot(subset(movie,country %in% country_with_multiple_movies$country),
aes(x=country,y=budget/1000000))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Movie Budget variation by Country")+
ylim(0,100)
View(country_summary)
View(country_with_multiple_movies)
country_summary[complete.cases(country_summary), ]
ggplot(country_summary[complete.cases(country_summary), ],
aes(x=reorder(country,-avg_budget),avg_budget/1000000))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Average Movie Budget by Country")
country_summary[complete.cases(country_summary), c(1,4)]
budget_rank <- country_summary[complete.cases(country_summary), c(1,4)]
View(budget_rank)
order(country_summary[complete.cases(country_summary), c(1,4)],avg_budget)
budget_rank <- order(country_summary[complete.cases(country_summary), c(1,4)],avg_budget)
budget_rank <- country_summary %>%
complete.cases() %>%
select(country,avg_budget)
budget_rank <- country_summary %>%
complete.cases() %>%
select_(country,avg_budget)
budget_rank <- budget_rank[order(-avg_budget)]
budget_rank <- budget_rank[order(-avg_budget),]
budget_rank <- budget_rank[order(-budget_rank$avg_budget),]
View(budget_rank)
budget_rank$rank <- n()
budget_rank$rank <- seq.int(nrow(budget_rank))
View(budget_rank)
budget_rank$rank <- seq.int(nrow(budget_rank))
View(movie)
movie_temp <- merge(x=movie,y=budget_rank, by = "country",all.x = TRUE)
View(movie_temp)
ggplot(subset(movie_temp,country %in% country_with_multiple_movies$country),
aes(x=country,y=budget/1000000))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Movie Budget variation by Country")+
ylim(0,100)
View(movie_temp)
ggplot(subset(movie_temp,country %in% country_with_multiple_movies$country),
aes(x=reorder(country,rank),y=budget/1000000))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Budget (Million $)")+
xlab("")+
ggtitle("Movie Budget variation by Country")+
ylim(0,100)
rm(movie_temp)
ggplot(country_summary[complete.cases(country_summary), ],
aes(x=reorder(country,-avg_gross),avg_gross/1000000))+
geom_bar(stat = "identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Revenue (Million $)")+
xlab("")+
ggtitle("Average Movie Revenue by Country")
View(country_summary)
revenue_rank <- country_summary[complete.cases(country_summary), c(1,5)]
View(revenue_rank)
revenue_rank <- revenue_rank[order(-revenue_rank$avg_gross),]
View(revenue_rank)
revenue_rank$rank <- seq.int(nrow(revenue_rank))
View(revenue_rank)
movie_temp <- merge(x=movie,y=revenue_rank, by = "country",all.x = TRUE)
ggplot(subset(movie_temp,country %in% country_with_multiple_movies$country),
aes(x=reorder(country,rank),y=gross/1000000))+
geom_boxplot()+
theme(axis.text.x=element_text(angle=45, hjust=1))+
ylab("Average Movie Revenue (Million $)")+
xlab("")+
ggtitle("Movie Revenue variation by Country")+
ylim(0,50)
